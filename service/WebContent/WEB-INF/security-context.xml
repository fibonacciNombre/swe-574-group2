<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
   xmlns="http://www.springframework.org/schema/security"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:sec="http://www.springframework.org/schema/security"
   xsi:schemaLocation="
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
 http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
 
  <sec:http entry-point-ref="authenticationEntryPoint">
<!-- 	<sec:http> -->
	
	
<!-- 	<sec:intercept-url pattern="/service/admin/**" access="ROLE_ADMIN" /> -->
	<sec:intercept-url pattern="/service/entries/add" access="ROLE_USER" />
	<sec:intercept-url pattern="/service/entries/thumbs" access="ROLE_USER" />
	<sec:intercept-url pattern="/service/login/success" access="ROLE_USER" />
<!-- 	<sec:intercept-url pattern="/service/categories/**" access="ROLE_USER" /> -->
<!-- 		<sec:form-login login-page="/login.html"/> -->
<!-- 	<sec:http-basic/> -->
<!-- 	<sec:remember-me key="testkey" services-ref="remembermeServices"/> -->
<!-- 	<sec:anonymous/> -->
<!-- 	<sec:custom-filter ref="authenticationTokenProcessingFilter" position="FIRST"/> -->
		<sec:custom-filter ref="authenticationFilter" before="FORM_LOGIN_FILTER"/>
	<sec:logout invalidate-session="true"
            delete-cookies="JSESSIONID" logout-success-url="/service/login/logoutsuccess"/>
 
	<sec:session-management session-authentication-strategy-ref="sas">
	</sec:session-management>
</sec:http>

<beans:bean class="com.swe.filters.CustomAuthenticationFilter"  id="authenticationFilter">
	<beans:constructor-arg name="defaultFilterProcessesUrl" value="/service/login/sigin"></beans:constructor-arg>
	<beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
	<beans:property name="rememberMeServices" ref="rememberMeServices"></beans:property>
	<beans:property name="sessionAuthenticationStrategy" ref="sas"></beans:property>
	<beans:property name="authenticationSuccessHandler" ref="authenticationSuccessHandler"></beans:property>
</beans:bean>

<beans:bean id="authenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
	<beans:property name="defaultTargetUrl" value="/service/login/success"></beans:property>
</beans:bean>
 <beans:bean id="sas"
      class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy"/>
<!-- <beans:bean class="com.swe.filters.AuthenticationTokenProcessingFilter" -->
<!--     id="authenticationTokenProcessingFilter"> -->
<!--     <beans:constructor-arg ref="authenticationManager" /> -->
<!-- </beans:bean> -->

<beans:bean id="authenticationEntryPoint"
class="com.swe.accessibilty.authentication.CustomAuthenticationEntryPoint"/>
 
   <!--  beans:bean id="myFilter" class=
    "org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
      <beans:property name="authenticationManager" ref="authenticationManager"/>
      beans:property name="authenticationSuccessHandler" ref="mySuccessHandler"/>
      </beans:bean> 
      -->
   
   <sec:authentication-manager alias="authenticationManager">
	   <sec:authentication-provider ref="myAuthenticationProvider">
	   </sec:authentication-provider>
	</sec:authentication-manager>

<!--     <beans:bean id="myAuthenticationProvider" class="com.swe.accessibilty.authentication.CustomAuthenticationProvider"/> -->
 
 	<beans:bean id="myAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
 	<beans:property name="userDetailsService" ref="userDetailsService"></beans:property>
 	<beans:property name="passwordEncoder" ref="passwordEncoder"></beans:property>
 	</beans:bean>
 	
 	<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
 	</beans:bean>
 	<beans:bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
    <beans:property name="hierarchy">
    	<beans:value>ROLE_ADMIN > ROLE_USER</beans:value>
        
    </beans:property>
</beans:bean>

<beans:bean id="userDetailsService" class="com.swe.accessibilty.service.CustomUserDetailsService"></beans:bean>

<beans:bean id="rememberMeFilter" class=
 "org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
  <beans:property name="rememberMeServices" ref="rememberMeServices"/>
  <beans:property name="authenticationManager" ref="authenticationManager" />
</beans:bean>

<beans:bean id="rememberMeServices" class=
 "org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
  <beans:property name="userDetailsService" ref="userDetailsService"/>
  <beans:property name="key" value="springRocks"/>
</beans:bean>

<beans:bean id="rememberMeAuthenticationProvider" class=
 "org.springframework.security.authentication.RememberMeAuthenticationProvider">
  <beans:property name="key" value="springRocks"/>
</beans:bean>
<!-- <beans:bean id="rememberMeServices" class= -->
<!--         "org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices"> -->
<!--     <beans:property name="userDetailsService" ref="jpaUserDetailsService"/> -->
<!--     <beans:property name="key" value="89dqj219dn910lsAc12"/> -->
<!-- </beans:bean> -->
   
 
</beans:beans>